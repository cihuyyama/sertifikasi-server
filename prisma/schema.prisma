// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Program {
  id          String    @id @default(cuid())
  name        String
  description String?
  status      String?
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  Event       Event[]

  @@map("programs")
}

model Event {
  id           String    @id @default(cuid())
  programId    String
  jenisEventId String?
  name         String
  description  String?
  startDate    DateTime
  endDate      DateTime
  harga        Int?
  tempat       String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?

  program    Program     @relation(fields: [programId], references: [id])
  JenisEvent JenisEvent? @relation(fields: [jenisEventId], references: [id])
  Notulensi  Notulensi[]
  Peserta    Peserta[]
  Panitia    Panitia[]

  @@map("events")
}

model JenisEvent {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Event Event[]

  @@map("jenis_events")
}

model Notulensi {
  id          String    @id @default(cuid())
  eventId     String
  name        String
  description String?
  file        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  event Event @relation(fields: [eventId], references: [id])

  @@map("notulensi")
}

model Peserta {
  id        String    @id @default(cuid())
  eventId   String
  name      String
  email     String?
  phone     String?
  status    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  event Event @relation(fields: [eventId], references: [id])

  @@map("peserta")
}

model Panitia {
  id        String    @id @default(cuid())
  eventId   String
  name      String
  email     String?
  phone     String?
  status    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  event Event @relation(fields: [eventId], references: [id])

  @@map("panitia")
}
